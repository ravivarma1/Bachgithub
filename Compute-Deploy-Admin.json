{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmSpec": {
      "type": "array",
      "metadata": {
        "description": "Name of the VMs"
      }
    },
    "imageId": {
      "type": "string",
      "metadata": {
        "description": "Id of the existing image"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Name of the VNET"
      }
    },
    "virtualNetworkResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Name of the VNET resource group"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "password",
      "allowedValues": [
        "password",
        "sshPublicKey"
      ],
      "metadata": {
        "description": "Type of authentication to use on the Virtual Machine."
      }
    },
    "adminPasswordOrKey": {
      "type": "securestring",
      "metadata": {
        "description": "Password or ssh key for the Virtual Machine."
      }
    },
    "diagStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Name for boot diagnostics storage account."
      }
    },
    "scheduleRunTimes": {
      "type": "array",
      "metadata": {
        "description": "Times in day when backup should be triggered. e.g. 01:00, 13:00. This will be used in LTR too for daily, weekly, monthly and yearly backup."
      }
    },
    "dailyRetentionDurationCount": {
      "type": "int",
      "metadata": {
        "description": "Number of days you want to retain the backup"
      }
    },
    "daysOfTheWeek": {
      "type": "array",
      "metadata": {
        "description": "Backup will run on array of Days like, Monday, Tuesday etc. Applies in Weekly retention only."
      }
    },
    "weeklyRetentionDurationCount": {
      "type": "int",
      "metadata": {
        "description": "Number of weeks you want to retain the backup"
      }
    },
    "monthlyRetentionDurationCount": {
      "type": "int",
      "metadata": {
        "description": "Number of months you want to retain the backup"
      }
    },
    "monthsOfYear": {
      "type": "array",
      "metadata": {
        "description": "Array of Months for Yearly Retention"
      }
    },
    "yearlyRetentionDurationCount": {
      "type": "int",
      "metadata": {
        "description": "Number of years you want to retain the backup"
      }
    },
    "timeZone": {
      "type": "string",
      "defaultValue": "Central Standard Time",
      "allowedValues": [
      ],
      "metadata": {
        "description": "Time zone for backup policy"
      }
    }
  },
  "variables": {
    "linuxConfiguration": {
      "disablePasswordAuthentication": true,
      "ssh": {
        "publicKeys": [
          {
            "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
            "keyData": "[parameters('adminPasswordOrKey')]"
          }
        ]
      }
    },
    "protectedItemType": "Microsoft.ClassicCompute/virtualMachines",
    "backupFabric": "Azure",
    "existingProtectionContainers": "iaasvmcontainer;iaasvmcontainerv2;",
    "existingProtectableItems": "vm;iaasvmcontainerv2;",
    "vaultName": "[concat(resourceGroup().name, '-vault')]",
    "policy1Name": "Policy1"
  },
  "resources": [
    {
      "condition": "[equals(parameters('vmSpec')[copyIndex()].publicIP,1)]",
      "apiVersion": "2018-04-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('vmSpec')[copyIndex()].resourceName,'-pip')]",
      "sku": {
        "name": "Standard"
      },
      "copy": {
        "name": "publicipcopy",
        "count": "[length(parameters('vmSpec'))]"
      },
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "PublicIPAddress"
      },
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "apiVersion": "2018-04-01",
      "type": "Microsoft.Network/networkInterfaces",
      "copy": {
        "name": "nic0copy",
        "count": "[length(parameters('vmSpec'))]"
      },
      "name": "[concat(parameters('vmSpec')[copyIndex()].resourceName,'-nic0')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "publicipcopy"
      ],
      "tags": {
        "displayName": "NetworkInterface"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId(parameters('virtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'),  parameters('vmSpec')[copyIndex()].nic0subnet)]"
              },
              "applicationSecurityGroups": [
                {
                  "id": "[resourceId(parameters('virtualNetworkResourceGroup'), 'Microsoft.Network/applicationSecurityGroups', parameters('vmSpec')[copyIndex()].nic0asg0)]"
                },
                {
                  "id": "[resourceId(parameters('virtualNetworkResourceGroup'), 'Microsoft.Network/applicationSecurityGroups', parameters('vmSpec')[copyIndex()].nic0asg1)]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2018-04-01",
      "comments": "VirtualMachine with 1 Network Interfaces",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmSpec')[copyIndex()].resourceName]",
      "zones": ["[parameters('vmSpec')[copyIndex()].vmZone]"],
      "copy": {
        "name": "vmcopy",
        "count": "[length(parameters('vmSpec'))]"
      },
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "VirtualMachine"
      },
      "dependsOn": [
        "nic0copy",
        "[concat('Microsoft.Storage/storageAccounts/', parameters('diagStorageAccountName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSpec')[copyIndex()].vmSize]"
        },
        "osProfile": {
          "computerName": "[parameters('vmSpec')[copyIndex()].vmName]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPasswordOrKey')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "OpenLogic",
            "offer": "CentOS",
            "sku": "7.5",
            "version": "latest"
        },
        "dataDisks": "[if(not(equals(parameters('vmSpec')[copyIndex()].vmDataDisk,'null')),json(concat('[{\"diskSizeGB\": \"',parameters('vmSpec')[copyIndex()].vmDataDisk,'\",\"lun\": 0,\"createOption\": \"Empty\", \"caching\": \"None\", \"managedDisk\": { \"storageAccountType\": \"Standard_LRS\" }, \"name\": \"',concat(parameters('vmSpec')[copyIndex()].resourceName,'-data1'),'\"}]')),json('null'))]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmSpec')[copyIndex()].resourceName,'-nic0'))]",
              "properties": {
                "primary": true
              }
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat('https://', parameters('diagStorageAccountName'), '.blob.core.windows.net/')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('diagStorageAccountName')]",
      "apiVersion": "2018-07-01",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "StorageAccount"
      },
      "dependsOn": [
      ],
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {}
    },
    {
      "type": "Microsoft.RecoveryServices/vaults",
      "apiVersion": "2015-11-10",
      "name": "[variables('vaultName')]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "RecoveryServicesVault"
      },
      "sku": {
        "name": "RS0",
        "tier": "Standard"
      },
      "properties": {
      }
    },
    {
      "apiVersion": "2015-11-10",
      "name": "[concat(variables('vaultName'), '/', variables('policy1Name'))]",
      "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
      "tags": {
        "displayName": "BackupPolicy"
      },
      "dependsOn": [ "[concat('Microsoft.RecoveryServices/vaults/', variables('vaultName'))]" ],
      "location": "[parameters('location')]",
      "properties": {
        "backupManagementType": "AzureIaasVM",
        "timeZone": "[parameters('timeZone')]",
        "schedulePolicy": {
          "scheduleRunFrequency": "Daily",
          "scheduleRunDays": null,
          "scheduleRunTimes": "[parameters('scheduleRunTimes')]",
          "schedulePolicyType": "SimpleSchedulePolicy"
        },
        "retentionPolicy": {
          "dailySchedule": {
            "retentionTimes": "[parameters('scheduleRunTimes')]",
            "retentionDuration": {
              "count": "[parameters('dailyRetentionDurationCount')]",
              "durationType": "Days"
            }
          },
          "weeklySchedule": {
            "daysOfTheWeek": "[parameters('daysOfTheWeek')]",
            "retentionTimes": "[parameters('scheduleRunTimes')]",
            "retentionDuration": {
              "count": "[parameters('weeklyRetentionDurationCount')]",
              "durationType": "Weeks"
            }
          },
          "monthlySchedule": {
            "retentionScheduleFormatType": "Daily",
            "retentionScheduleDaily": {
              "daysOfTheMonth": [
                {
                  "date": 1,
                  "isLast": false
                }
              ]
            },
            "retentionScheduleWeekly": null,
            "retentionTimes": "[parameters('scheduleRunTimes')]",
            "retentionDuration": {
              "count": "[parameters('monthlyRetentionDurationCount')]",
              "durationType": "Months"
            }
          },
          "yearlySchedule": {
            "retentionScheduleFormatType": "Daily",
            "monthsOfYear": "[parameters('monthsOfYear')]",
            "retentionScheduleDaily": {
              "daysOfTheMonth": [
                {
                  "date": 1,
                  "isLast": false
                }
              ]
            },
            "retentionScheduleWeekly": null,
            "retentionTimes": "[parameters('scheduleRunTimes')]",
            "retentionDuration": {
              "count": "[parameters('yearlyRetentionDurationCount')]",
              "durationType": "Years"
            }
          },
          "retentionPolicyType": "LongTermRetentionPolicy"
        }
      }
    },
    {
      "condition": "[equals(parameters('vmSpec')[copyIndex()].Snapshot,1)]",
      "name": "[concat(variables('vaultName'), '/', variables('backupFabric'), '/', concat(variables('existingProtectionContainers'), resourceGroup().name, ';', parameters('vmSpec')[copyIndex()].resourceName, '/', concat(variables('existingProtectableItems'), resourceGroup().name, ';', parameters('vmSpec')[copyIndex()].resourceName)))]",
      "apiVersion": "2016-06-01",
      "location": "[parameters('location')]",
      "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
      "tags": {
        "displayName": "ProtectedItems"
      },
      "copy": {
        "name": "protectedItemsCopy",
        "count": "[length(parameters('vmSpec'))]"
      },
      "dependsOn": [
        "vmcopy"
      ],
      "properties": {
        "protectedItemType": "[variables('protectedItemType')]",
        "policyId": "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies', variables('vaultName'),variables('policy1Name'))]",
        "sourceResourceId": "[concat(resourceGroup().id, '/providers/','Microsoft.Compute/virtualMachines/', parameters('vmSpec')[copyIndex()].resourceName)]"
      }
    }
  ]
}